webpackHotUpdate(3,{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/pages/AddFispq.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/AddFispq.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"./node_modules/core-js/modules/es.array.index-of.js\");\n/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ \"./node_modules/core-js/modules/es.array.splice.js\");\n/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  //   data () {\n  //     return {\n  //       e13: 1,\n  //       idfispqRules: [\n  //                 v => !!v || 'Cod. interno é obrigatório'\n  //             ],\n  //     }\n  //   },\n  // }\n  data: function data() {\n    return {\n      e13: 1,\n      dialog: false,\n      dialogDelete: false,\n      headers: [{\n        text: 'Substância',\n        align: 'start',\n        sortable: false,\n        value: 'substancia'\n      }, {\n        text: 'CAS',\n        value: 'cas'\n      }, {\n        text: 'Formula Molecular',\n        value: 'fm'\n      }, {\n        text: 'Peso Molecular',\n        value: 'pm'\n      }, {\n        text: 'Concentração (M/M)',\n        value: 'cmm'\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }],\n      substancias: [],\n      editedIndex: -1,\n      editedItem: {\n        substancia: '',\n        cas: '',\n        fm: '',\n        pm: 0,\n        cmm: 0\n      },\n      defaultItem: {\n        substancia: '',\n        cas: 0,\n        fm: 0,\n        pm: 0,\n        cmm: 0\n      }\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? 'Nova Substância' : 'Edit Item';\n    }\n  },\n  watch: {\n    dialog: function dialog(val) {\n      val || this.close();\n    },\n    dialogDelete: function dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  created: function created() {\n    this.initialize();\n  },\n  methods: {\n    initialize: function initialize() {\n      this.substancias = [{\n        substancia: 'Água',\n        cas: 159,\n        fm: 2,\n        pm: 18,\n        cmm: 90\n      }, {\n        substancia: 'Ice cream sandwich',\n        cas: 237,\n        fm: 9.0,\n        pm: 37,\n        cmm: 4.3\n      }, {\n        substancia: 'Eclair',\n        cas: 262,\n        fm: 16.0,\n        pm: 23,\n        cmm: 6.0\n      }];\n    },\n    editItem: function editItem(item) {\n      this.editedIndex = this.substancias.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem: function deleteItem(item) {\n      this.editedIndex = this.substancias.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm: function deleteItemConfirm() {\n      this.substancias.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    close: function close() {\n      var _this = this;\n\n      this.dialog = false;\n      this.$nextTick(function () {\n        _this.editedItem = Object.assign({}, _this.defaultItem);\n        _this.editedIndex = -1;\n      });\n    },\n    closeDelete: function closeDelete() {\n      var _this2 = this;\n\n      this.dialogDelete = false;\n      this.$nextTick(function () {\n        _this2.editedItem = Object.assign({}, _this2.defaultItem);\n        _this2.editedIndex = -1;\n      });\n    },\n    save: function save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.substancias[this.editedIndex], this.editedItem);\n      } else {\n        this.substancias.push(this.editedItem);\n      }\n\n      this.close();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/pages/AddFispq.vue?vue&type=script&lang=js&\n");

/***/ })

})